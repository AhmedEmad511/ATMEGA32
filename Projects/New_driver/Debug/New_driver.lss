
New_driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000073a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000630  00000000  00000000  00000790  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      0000044e  00000000  00000000  00000dc0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 8e 03 	call	0x71c	; 0x71c <main>
  64:	0c 94 9b 03 	jmp	0x736	; 0x736 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_u8SetPinDirection>:
#include "DIO_interface.h"

u8 DIO_u8SetPinDirection(u8 u8_CopyPort,u8 u8_CopyPin,u8 u8_Direction)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62
  74:	28 97       	sbiw	r28, 0x08	; 8
  76:	0f b6       	in	r0, 0x3f	; 63
  78:	f8 94       	cli
  7a:	de bf       	out	0x3e, r29	; 62
  7c:	0f be       	out	0x3f, r0	; 63
  7e:	cd bf       	out	0x3d, r28	; 61
  80:	89 83       	std	Y+1, r24	; 0x01
  82:	6a 83       	std	Y+2, r22	; 0x02
  84:	4b 83       	std	Y+3, r20	; 0x03
	if(u8_Direction ==OUTPUT )
  86:	8b 81       	ldd	r24, Y+3	; 0x03
  88:	81 30       	cpi	r24, 0x01	; 1
  8a:	09 f0       	breq	.+2      	; 0x8e <DIO_u8SetPinDirection+0x22>
  8c:	6e c0       	rjmp	.+220    	; 0x16a <DIO_u8SetPinDirection+0xfe>
	{
		switch (u8_CopyPort)
  8e:	89 81       	ldd	r24, Y+1	; 0x01
  90:	28 2f       	mov	r18, r24
  92:	30 e0       	ldi	r19, 0x00	; 0
  94:	3f 83       	std	Y+7, r19	; 0x07
  96:	2e 83       	std	Y+6, r18	; 0x06
  98:	8e 81       	ldd	r24, Y+6	; 0x06
  9a:	9f 81       	ldd	r25, Y+7	; 0x07
  9c:	81 30       	cpi	r24, 0x01	; 1
  9e:	91 05       	cpc	r25, r1
  a0:	49 f1       	breq	.+82     	; 0xf4 <DIO_u8SetPinDirection+0x88>
  a2:	2e 81       	ldd	r18, Y+6	; 0x06
  a4:	3f 81       	ldd	r19, Y+7	; 0x07
  a6:	22 30       	cpi	r18, 0x02	; 2
  a8:	31 05       	cpc	r19, r1
  aa:	2c f4       	brge	.+10     	; 0xb6 <DIO_u8SetPinDirection+0x4a>
  ac:	8e 81       	ldd	r24, Y+6	; 0x06
  ae:	9f 81       	ldd	r25, Y+7	; 0x07
  b0:	00 97       	sbiw	r24, 0x00	; 0
  b2:	61 f0       	breq	.+24     	; 0xcc <DIO_u8SetPinDirection+0x60>
  b4:	5a c0       	rjmp	.+180    	; 0x16a <DIO_u8SetPinDirection+0xfe>
  b6:	2e 81       	ldd	r18, Y+6	; 0x06
  b8:	3f 81       	ldd	r19, Y+7	; 0x07
  ba:	22 30       	cpi	r18, 0x02	; 2
  bc:	31 05       	cpc	r19, r1
  be:	71 f1       	breq	.+92     	; 0x11c <DIO_u8SetPinDirection+0xb0>
  c0:	8e 81       	ldd	r24, Y+6	; 0x06
  c2:	9f 81       	ldd	r25, Y+7	; 0x07
  c4:	83 30       	cpi	r24, 0x03	; 3
  c6:	91 05       	cpc	r25, r1
  c8:	e9 f1       	breq	.+122    	; 0x144 <DIO_u8SetPinDirection+0xd8>
  ca:	4f c0       	rjmp	.+158    	; 0x16a <DIO_u8SetPinDirection+0xfe>
		{
		case PORT_A :
			SET_BIT(DDRA,u8_CopyPin);
  cc:	aa e3       	ldi	r26, 0x3A	; 58
  ce:	b0 e0       	ldi	r27, 0x00	; 0
  d0:	ea e3       	ldi	r30, 0x3A	; 58
  d2:	f0 e0       	ldi	r31, 0x00	; 0
  d4:	80 81       	ld	r24, Z
  d6:	48 2f       	mov	r20, r24
  d8:	8a 81       	ldd	r24, Y+2	; 0x02
  da:	28 2f       	mov	r18, r24
  dc:	30 e0       	ldi	r19, 0x00	; 0
  de:	81 e0       	ldi	r24, 0x01	; 1
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	02 2e       	mov	r0, r18
  e4:	02 c0       	rjmp	.+4      	; 0xea <DIO_u8SetPinDirection+0x7e>
  e6:	88 0f       	add	r24, r24
  e8:	99 1f       	adc	r25, r25
  ea:	0a 94       	dec	r0
  ec:	e2 f7       	brpl	.-8      	; 0xe6 <DIO_u8SetPinDirection+0x7a>
  ee:	84 2b       	or	r24, r20
  f0:	8c 93       	st	X, r24
  f2:	3b c0       	rjmp	.+118    	; 0x16a <DIO_u8SetPinDirection+0xfe>
			break;
		case PORT_B :
			SET_BIT(DDRB,u8_CopyPin);
  f4:	a7 e3       	ldi	r26, 0x37	; 55
  f6:	b0 e0       	ldi	r27, 0x00	; 0
  f8:	e7 e3       	ldi	r30, 0x37	; 55
  fa:	f0 e0       	ldi	r31, 0x00	; 0
  fc:	80 81       	ld	r24, Z
  fe:	48 2f       	mov	r20, r24
 100:	8a 81       	ldd	r24, Y+2	; 0x02
 102:	28 2f       	mov	r18, r24
 104:	30 e0       	ldi	r19, 0x00	; 0
 106:	81 e0       	ldi	r24, 0x01	; 1
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	02 2e       	mov	r0, r18
 10c:	02 c0       	rjmp	.+4      	; 0x112 <DIO_u8SetPinDirection+0xa6>
 10e:	88 0f       	add	r24, r24
 110:	99 1f       	adc	r25, r25
 112:	0a 94       	dec	r0
 114:	e2 f7       	brpl	.-8      	; 0x10e <DIO_u8SetPinDirection+0xa2>
 116:	84 2b       	or	r24, r20
 118:	8c 93       	st	X, r24
 11a:	27 c0       	rjmp	.+78     	; 0x16a <DIO_u8SetPinDirection+0xfe>
			break;
		case PORT_C :
			SET_BIT(DDRC,u8_CopyPin);
 11c:	a4 e3       	ldi	r26, 0x34	; 52
 11e:	b0 e0       	ldi	r27, 0x00	; 0
 120:	e4 e3       	ldi	r30, 0x34	; 52
 122:	f0 e0       	ldi	r31, 0x00	; 0
 124:	80 81       	ld	r24, Z
 126:	48 2f       	mov	r20, r24
 128:	8a 81       	ldd	r24, Y+2	; 0x02
 12a:	28 2f       	mov	r18, r24
 12c:	30 e0       	ldi	r19, 0x00	; 0
 12e:	81 e0       	ldi	r24, 0x01	; 1
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	02 2e       	mov	r0, r18
 134:	02 c0       	rjmp	.+4      	; 0x13a <DIO_u8SetPinDirection+0xce>
 136:	88 0f       	add	r24, r24
 138:	99 1f       	adc	r25, r25
 13a:	0a 94       	dec	r0
 13c:	e2 f7       	brpl	.-8      	; 0x136 <DIO_u8SetPinDirection+0xca>
 13e:	84 2b       	or	r24, r20
 140:	8c 93       	st	X, r24
 142:	13 c0       	rjmp	.+38     	; 0x16a <DIO_u8SetPinDirection+0xfe>
			break;
		case PORT_D :
			SET_BIT(DDRD,u8_CopyPin);
 144:	a1 e3       	ldi	r26, 0x31	; 49
 146:	b0 e0       	ldi	r27, 0x00	; 0
 148:	e1 e3       	ldi	r30, 0x31	; 49
 14a:	f0 e0       	ldi	r31, 0x00	; 0
 14c:	80 81       	ld	r24, Z
 14e:	48 2f       	mov	r20, r24
 150:	8a 81       	ldd	r24, Y+2	; 0x02
 152:	28 2f       	mov	r18, r24
 154:	30 e0       	ldi	r19, 0x00	; 0
 156:	81 e0       	ldi	r24, 0x01	; 1
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	02 2e       	mov	r0, r18
 15c:	02 c0       	rjmp	.+4      	; 0x162 <DIO_u8SetPinDirection+0xf6>
 15e:	88 0f       	add	r24, r24
 160:	99 1f       	adc	r25, r25
 162:	0a 94       	dec	r0
 164:	e2 f7       	brpl	.-8      	; 0x15e <DIO_u8SetPinDirection+0xf2>
 166:	84 2b       	or	r24, r20
 168:	8c 93       	st	X, r24
			break;
		default :
			break;
		}
	}
	if(u8_Direction ==INPUT )
 16a:	8b 81       	ldd	r24, Y+3	; 0x03
 16c:	88 23       	and	r24, r24
 16e:	09 f0       	breq	.+2      	; 0x172 <DIO_u8SetPinDirection+0x106>
 170:	73 c0       	rjmp	.+230    	; 0x258 <DIO_u8SetPinDirection+0x1ec>
	{
		switch (u8_CopyPort)
 172:	89 81       	ldd	r24, Y+1	; 0x01
 174:	28 2f       	mov	r18, r24
 176:	30 e0       	ldi	r19, 0x00	; 0
 178:	3d 83       	std	Y+5, r19	; 0x05
 17a:	2c 83       	std	Y+4, r18	; 0x04
 17c:	8c 81       	ldd	r24, Y+4	; 0x04
 17e:	9d 81       	ldd	r25, Y+5	; 0x05
 180:	81 30       	cpi	r24, 0x01	; 1
 182:	91 05       	cpc	r25, r1
 184:	59 f1       	breq	.+86     	; 0x1dc <DIO_u8SetPinDirection+0x170>
 186:	2c 81       	ldd	r18, Y+4	; 0x04
 188:	3d 81       	ldd	r19, Y+5	; 0x05
 18a:	22 30       	cpi	r18, 0x02	; 2
 18c:	31 05       	cpc	r19, r1
 18e:	2c f4       	brge	.+10     	; 0x19a <DIO_u8SetPinDirection+0x12e>
 190:	8c 81       	ldd	r24, Y+4	; 0x04
 192:	9d 81       	ldd	r25, Y+5	; 0x05
 194:	00 97       	sbiw	r24, 0x00	; 0
 196:	69 f0       	breq	.+26     	; 0x1b2 <DIO_u8SetPinDirection+0x146>
 198:	5f c0       	rjmp	.+190    	; 0x258 <DIO_u8SetPinDirection+0x1ec>
 19a:	2c 81       	ldd	r18, Y+4	; 0x04
 19c:	3d 81       	ldd	r19, Y+5	; 0x05
 19e:	22 30       	cpi	r18, 0x02	; 2
 1a0:	31 05       	cpc	r19, r1
 1a2:	89 f1       	breq	.+98     	; 0x206 <DIO_u8SetPinDirection+0x19a>
 1a4:	8c 81       	ldd	r24, Y+4	; 0x04
 1a6:	9d 81       	ldd	r25, Y+5	; 0x05
 1a8:	83 30       	cpi	r24, 0x03	; 3
 1aa:	91 05       	cpc	r25, r1
 1ac:	09 f4       	brne	.+2      	; 0x1b0 <DIO_u8SetPinDirection+0x144>
 1ae:	40 c0       	rjmp	.+128    	; 0x230 <DIO_u8SetPinDirection+0x1c4>
 1b0:	53 c0       	rjmp	.+166    	; 0x258 <DIO_u8SetPinDirection+0x1ec>
		{
		case PORT_A :
			CLR_BIT(DDRA,u8_CopyPin);
 1b2:	aa e3       	ldi	r26, 0x3A	; 58
 1b4:	b0 e0       	ldi	r27, 0x00	; 0
 1b6:	ea e3       	ldi	r30, 0x3A	; 58
 1b8:	f0 e0       	ldi	r31, 0x00	; 0
 1ba:	80 81       	ld	r24, Z
 1bc:	48 2f       	mov	r20, r24
 1be:	8a 81       	ldd	r24, Y+2	; 0x02
 1c0:	28 2f       	mov	r18, r24
 1c2:	30 e0       	ldi	r19, 0x00	; 0
 1c4:	81 e0       	ldi	r24, 0x01	; 1
 1c6:	90 e0       	ldi	r25, 0x00	; 0
 1c8:	02 2e       	mov	r0, r18
 1ca:	02 c0       	rjmp	.+4      	; 0x1d0 <DIO_u8SetPinDirection+0x164>
 1cc:	88 0f       	add	r24, r24
 1ce:	99 1f       	adc	r25, r25
 1d0:	0a 94       	dec	r0
 1d2:	e2 f7       	brpl	.-8      	; 0x1cc <DIO_u8SetPinDirection+0x160>
 1d4:	80 95       	com	r24
 1d6:	84 23       	and	r24, r20
 1d8:	8c 93       	st	X, r24
 1da:	3e c0       	rjmp	.+124    	; 0x258 <DIO_u8SetPinDirection+0x1ec>
			break;
		case PORT_B :
			CLR_BIT(DDRB,u8_CopyPin);
 1dc:	a7 e3       	ldi	r26, 0x37	; 55
 1de:	b0 e0       	ldi	r27, 0x00	; 0
 1e0:	e7 e3       	ldi	r30, 0x37	; 55
 1e2:	f0 e0       	ldi	r31, 0x00	; 0
 1e4:	80 81       	ld	r24, Z
 1e6:	48 2f       	mov	r20, r24
 1e8:	8a 81       	ldd	r24, Y+2	; 0x02
 1ea:	28 2f       	mov	r18, r24
 1ec:	30 e0       	ldi	r19, 0x00	; 0
 1ee:	81 e0       	ldi	r24, 0x01	; 1
 1f0:	90 e0       	ldi	r25, 0x00	; 0
 1f2:	02 2e       	mov	r0, r18
 1f4:	02 c0       	rjmp	.+4      	; 0x1fa <DIO_u8SetPinDirection+0x18e>
 1f6:	88 0f       	add	r24, r24
 1f8:	99 1f       	adc	r25, r25
 1fa:	0a 94       	dec	r0
 1fc:	e2 f7       	brpl	.-8      	; 0x1f6 <DIO_u8SetPinDirection+0x18a>
 1fe:	80 95       	com	r24
 200:	84 23       	and	r24, r20
 202:	8c 93       	st	X, r24
 204:	29 c0       	rjmp	.+82     	; 0x258 <DIO_u8SetPinDirection+0x1ec>
			break;
		case PORT_C :
			CLR_BIT(DDRC,u8_CopyPin);
 206:	a4 e3       	ldi	r26, 0x34	; 52
 208:	b0 e0       	ldi	r27, 0x00	; 0
 20a:	e4 e3       	ldi	r30, 0x34	; 52
 20c:	f0 e0       	ldi	r31, 0x00	; 0
 20e:	80 81       	ld	r24, Z
 210:	48 2f       	mov	r20, r24
 212:	8a 81       	ldd	r24, Y+2	; 0x02
 214:	28 2f       	mov	r18, r24
 216:	30 e0       	ldi	r19, 0x00	; 0
 218:	81 e0       	ldi	r24, 0x01	; 1
 21a:	90 e0       	ldi	r25, 0x00	; 0
 21c:	02 2e       	mov	r0, r18
 21e:	02 c0       	rjmp	.+4      	; 0x224 <DIO_u8SetPinDirection+0x1b8>
 220:	88 0f       	add	r24, r24
 222:	99 1f       	adc	r25, r25
 224:	0a 94       	dec	r0
 226:	e2 f7       	brpl	.-8      	; 0x220 <DIO_u8SetPinDirection+0x1b4>
 228:	80 95       	com	r24
 22a:	84 23       	and	r24, r20
 22c:	8c 93       	st	X, r24
 22e:	14 c0       	rjmp	.+40     	; 0x258 <DIO_u8SetPinDirection+0x1ec>
			break;
		case PORT_D :
			CLR_BIT(DDRD,u8_CopyPin);
 230:	a1 e3       	ldi	r26, 0x31	; 49
 232:	b0 e0       	ldi	r27, 0x00	; 0
 234:	e1 e3       	ldi	r30, 0x31	; 49
 236:	f0 e0       	ldi	r31, 0x00	; 0
 238:	80 81       	ld	r24, Z
 23a:	48 2f       	mov	r20, r24
 23c:	8a 81       	ldd	r24, Y+2	; 0x02
 23e:	28 2f       	mov	r18, r24
 240:	30 e0       	ldi	r19, 0x00	; 0
 242:	81 e0       	ldi	r24, 0x01	; 1
 244:	90 e0       	ldi	r25, 0x00	; 0
 246:	02 2e       	mov	r0, r18
 248:	02 c0       	rjmp	.+4      	; 0x24e <DIO_u8SetPinDirection+0x1e2>
 24a:	88 0f       	add	r24, r24
 24c:	99 1f       	adc	r25, r25
 24e:	0a 94       	dec	r0
 250:	e2 f7       	brpl	.-8      	; 0x24a <DIO_u8SetPinDirection+0x1de>
 252:	80 95       	com	r24
 254:	84 23       	and	r24, r20
 256:	8c 93       	st	X, r24
			break;
		default :
			break;
		}
	}
}
 258:	28 96       	adiw	r28, 0x08	; 8
 25a:	0f b6       	in	r0, 0x3f	; 63
 25c:	f8 94       	cli
 25e:	de bf       	out	0x3e, r29	; 62
 260:	0f be       	out	0x3f, r0	; 63
 262:	cd bf       	out	0x3d, r28	; 61
 264:	cf 91       	pop	r28
 266:	df 91       	pop	r29
 268:	08 95       	ret

0000026a <DIO_u8SetPortDirection>:

u8 DIO_u8SetPortDirection(u8 u8_CopyPort,u8 u8_Direction)
{
 26a:	df 93       	push	r29
 26c:	cf 93       	push	r28
 26e:	00 d0       	rcall	.+0      	; 0x270 <DIO_u8SetPortDirection+0x6>
 270:	00 d0       	rcall	.+0      	; 0x272 <DIO_u8SetPortDirection+0x8>
 272:	0f 92       	push	r0
 274:	cd b7       	in	r28, 0x3d	; 61
 276:	de b7       	in	r29, 0x3e	; 62
 278:	89 83       	std	Y+1, r24	; 0x01
 27a:	6a 83       	std	Y+2, r22	; 0x02
	switch (u8_CopyPort)
 27c:	89 81       	ldd	r24, Y+1	; 0x01
 27e:	28 2f       	mov	r18, r24
 280:	30 e0       	ldi	r19, 0x00	; 0
 282:	3c 83       	std	Y+4, r19	; 0x04
 284:	2b 83       	std	Y+3, r18	; 0x03
 286:	8b 81       	ldd	r24, Y+3	; 0x03
 288:	9c 81       	ldd	r25, Y+4	; 0x04
 28a:	81 30       	cpi	r24, 0x01	; 1
 28c:	91 05       	cpc	r25, r1
 28e:	d1 f0       	breq	.+52     	; 0x2c4 <DIO_u8SetPortDirection+0x5a>
 290:	2b 81       	ldd	r18, Y+3	; 0x03
 292:	3c 81       	ldd	r19, Y+4	; 0x04
 294:	22 30       	cpi	r18, 0x02	; 2
 296:	31 05       	cpc	r19, r1
 298:	2c f4       	brge	.+10     	; 0x2a4 <DIO_u8SetPortDirection+0x3a>
 29a:	8b 81       	ldd	r24, Y+3	; 0x03
 29c:	9c 81       	ldd	r25, Y+4	; 0x04
 29e:	00 97       	sbiw	r24, 0x00	; 0
 2a0:	61 f0       	breq	.+24     	; 0x2ba <DIO_u8SetPortDirection+0x50>
 2a2:	1e c0       	rjmp	.+60     	; 0x2e0 <DIO_u8SetPortDirection+0x76>
 2a4:	2b 81       	ldd	r18, Y+3	; 0x03
 2a6:	3c 81       	ldd	r19, Y+4	; 0x04
 2a8:	22 30       	cpi	r18, 0x02	; 2
 2aa:	31 05       	cpc	r19, r1
 2ac:	81 f0       	breq	.+32     	; 0x2ce <DIO_u8SetPortDirection+0x64>
 2ae:	8b 81       	ldd	r24, Y+3	; 0x03
 2b0:	9c 81       	ldd	r25, Y+4	; 0x04
 2b2:	83 30       	cpi	r24, 0x03	; 3
 2b4:	91 05       	cpc	r25, r1
 2b6:	81 f0       	breq	.+32     	; 0x2d8 <DIO_u8SetPortDirection+0x6e>
 2b8:	13 c0       	rjmp	.+38     	; 0x2e0 <DIO_u8SetPortDirection+0x76>
	{
	case PORT_A :
		DDRA=u8_Direction;
 2ba:	ea e3       	ldi	r30, 0x3A	; 58
 2bc:	f0 e0       	ldi	r31, 0x00	; 0
 2be:	8a 81       	ldd	r24, Y+2	; 0x02
 2c0:	80 83       	st	Z, r24
 2c2:	0e c0       	rjmp	.+28     	; 0x2e0 <DIO_u8SetPortDirection+0x76>
		break;
	case PORT_B :
	    DDRB=u8_Direction;
 2c4:	e7 e3       	ldi	r30, 0x37	; 55
 2c6:	f0 e0       	ldi	r31, 0x00	; 0
 2c8:	8a 81       	ldd	r24, Y+2	; 0x02
 2ca:	80 83       	st	Z, r24
 2cc:	09 c0       	rjmp	.+18     	; 0x2e0 <DIO_u8SetPortDirection+0x76>
		break;
	case PORT_C :
		DDRC=u8_Direction;
 2ce:	e4 e3       	ldi	r30, 0x34	; 52
 2d0:	f0 e0       	ldi	r31, 0x00	; 0
 2d2:	8a 81       	ldd	r24, Y+2	; 0x02
 2d4:	80 83       	st	Z, r24
 2d6:	04 c0       	rjmp	.+8      	; 0x2e0 <DIO_u8SetPortDirection+0x76>
		break;
	case PORT_D :
		DDRD=u8_Direction;
 2d8:	e1 e3       	ldi	r30, 0x31	; 49
 2da:	f0 e0       	ldi	r31, 0x00	; 0
 2dc:	8a 81       	ldd	r24, Y+2	; 0x02
 2de:	80 83       	st	Z, r24
		break;
	default:
		break;
	}
}
 2e0:	0f 90       	pop	r0
 2e2:	0f 90       	pop	r0
 2e4:	0f 90       	pop	r0
 2e6:	0f 90       	pop	r0
 2e8:	0f 90       	pop	r0
 2ea:	cf 91       	pop	r28
 2ec:	df 91       	pop	r29
 2ee:	08 95       	ret

000002f0 <DIO_u8SetPinValue>:

u8 DIO_u8SetPinValue(u8 u8_CopyPort,u8 u8_CopyPin,u8 u8_Value)
{
 2f0:	df 93       	push	r29
 2f2:	cf 93       	push	r28
 2f4:	cd b7       	in	r28, 0x3d	; 61
 2f6:	de b7       	in	r29, 0x3e	; 62
 2f8:	28 97       	sbiw	r28, 0x08	; 8
 2fa:	0f b6       	in	r0, 0x3f	; 63
 2fc:	f8 94       	cli
 2fe:	de bf       	out	0x3e, r29	; 62
 300:	0f be       	out	0x3f, r0	; 63
 302:	cd bf       	out	0x3d, r28	; 61
 304:	89 83       	std	Y+1, r24	; 0x01
 306:	6a 83       	std	Y+2, r22	; 0x02
 308:	4b 83       	std	Y+3, r20	; 0x03
	if(u8_Value ==HIGH )
 30a:	8b 81       	ldd	r24, Y+3	; 0x03
 30c:	81 30       	cpi	r24, 0x01	; 1
 30e:	09 f0       	breq	.+2      	; 0x312 <DIO_u8SetPinValue+0x22>
 310:	6e c0       	rjmp	.+220    	; 0x3ee <DIO_u8SetPinValue+0xfe>
	{
		switch (u8_CopyPort)
 312:	89 81       	ldd	r24, Y+1	; 0x01
 314:	28 2f       	mov	r18, r24
 316:	30 e0       	ldi	r19, 0x00	; 0
 318:	3f 83       	std	Y+7, r19	; 0x07
 31a:	2e 83       	std	Y+6, r18	; 0x06
 31c:	8e 81       	ldd	r24, Y+6	; 0x06
 31e:	9f 81       	ldd	r25, Y+7	; 0x07
 320:	81 30       	cpi	r24, 0x01	; 1
 322:	91 05       	cpc	r25, r1
 324:	49 f1       	breq	.+82     	; 0x378 <DIO_u8SetPinValue+0x88>
 326:	2e 81       	ldd	r18, Y+6	; 0x06
 328:	3f 81       	ldd	r19, Y+7	; 0x07
 32a:	22 30       	cpi	r18, 0x02	; 2
 32c:	31 05       	cpc	r19, r1
 32e:	2c f4       	brge	.+10     	; 0x33a <DIO_u8SetPinValue+0x4a>
 330:	8e 81       	ldd	r24, Y+6	; 0x06
 332:	9f 81       	ldd	r25, Y+7	; 0x07
 334:	00 97       	sbiw	r24, 0x00	; 0
 336:	61 f0       	breq	.+24     	; 0x350 <DIO_u8SetPinValue+0x60>
 338:	5a c0       	rjmp	.+180    	; 0x3ee <DIO_u8SetPinValue+0xfe>
 33a:	2e 81       	ldd	r18, Y+6	; 0x06
 33c:	3f 81       	ldd	r19, Y+7	; 0x07
 33e:	22 30       	cpi	r18, 0x02	; 2
 340:	31 05       	cpc	r19, r1
 342:	71 f1       	breq	.+92     	; 0x3a0 <DIO_u8SetPinValue+0xb0>
 344:	8e 81       	ldd	r24, Y+6	; 0x06
 346:	9f 81       	ldd	r25, Y+7	; 0x07
 348:	83 30       	cpi	r24, 0x03	; 3
 34a:	91 05       	cpc	r25, r1
 34c:	e9 f1       	breq	.+122    	; 0x3c8 <DIO_u8SetPinValue+0xd8>
 34e:	4f c0       	rjmp	.+158    	; 0x3ee <DIO_u8SetPinValue+0xfe>
		{
		case PORT_A :
			SET_BIT(PORTA,u8_CopyPin);
 350:	ab e3       	ldi	r26, 0x3B	; 59
 352:	b0 e0       	ldi	r27, 0x00	; 0
 354:	eb e3       	ldi	r30, 0x3B	; 59
 356:	f0 e0       	ldi	r31, 0x00	; 0
 358:	80 81       	ld	r24, Z
 35a:	48 2f       	mov	r20, r24
 35c:	8a 81       	ldd	r24, Y+2	; 0x02
 35e:	28 2f       	mov	r18, r24
 360:	30 e0       	ldi	r19, 0x00	; 0
 362:	81 e0       	ldi	r24, 0x01	; 1
 364:	90 e0       	ldi	r25, 0x00	; 0
 366:	02 2e       	mov	r0, r18
 368:	02 c0       	rjmp	.+4      	; 0x36e <DIO_u8SetPinValue+0x7e>
 36a:	88 0f       	add	r24, r24
 36c:	99 1f       	adc	r25, r25
 36e:	0a 94       	dec	r0
 370:	e2 f7       	brpl	.-8      	; 0x36a <DIO_u8SetPinValue+0x7a>
 372:	84 2b       	or	r24, r20
 374:	8c 93       	st	X, r24
 376:	3b c0       	rjmp	.+118    	; 0x3ee <DIO_u8SetPinValue+0xfe>
			break;
		case PORT_B :
			SET_BIT(PORTB,u8_CopyPin);
 378:	a8 e3       	ldi	r26, 0x38	; 56
 37a:	b0 e0       	ldi	r27, 0x00	; 0
 37c:	e8 e3       	ldi	r30, 0x38	; 56
 37e:	f0 e0       	ldi	r31, 0x00	; 0
 380:	80 81       	ld	r24, Z
 382:	48 2f       	mov	r20, r24
 384:	8a 81       	ldd	r24, Y+2	; 0x02
 386:	28 2f       	mov	r18, r24
 388:	30 e0       	ldi	r19, 0x00	; 0
 38a:	81 e0       	ldi	r24, 0x01	; 1
 38c:	90 e0       	ldi	r25, 0x00	; 0
 38e:	02 2e       	mov	r0, r18
 390:	02 c0       	rjmp	.+4      	; 0x396 <DIO_u8SetPinValue+0xa6>
 392:	88 0f       	add	r24, r24
 394:	99 1f       	adc	r25, r25
 396:	0a 94       	dec	r0
 398:	e2 f7       	brpl	.-8      	; 0x392 <DIO_u8SetPinValue+0xa2>
 39a:	84 2b       	or	r24, r20
 39c:	8c 93       	st	X, r24
 39e:	27 c0       	rjmp	.+78     	; 0x3ee <DIO_u8SetPinValue+0xfe>
			break;
		case PORT_C :
			SET_BIT(PORTC,u8_CopyPin);
 3a0:	a5 e3       	ldi	r26, 0x35	; 53
 3a2:	b0 e0       	ldi	r27, 0x00	; 0
 3a4:	e5 e3       	ldi	r30, 0x35	; 53
 3a6:	f0 e0       	ldi	r31, 0x00	; 0
 3a8:	80 81       	ld	r24, Z
 3aa:	48 2f       	mov	r20, r24
 3ac:	8a 81       	ldd	r24, Y+2	; 0x02
 3ae:	28 2f       	mov	r18, r24
 3b0:	30 e0       	ldi	r19, 0x00	; 0
 3b2:	81 e0       	ldi	r24, 0x01	; 1
 3b4:	90 e0       	ldi	r25, 0x00	; 0
 3b6:	02 2e       	mov	r0, r18
 3b8:	02 c0       	rjmp	.+4      	; 0x3be <DIO_u8SetPinValue+0xce>
 3ba:	88 0f       	add	r24, r24
 3bc:	99 1f       	adc	r25, r25
 3be:	0a 94       	dec	r0
 3c0:	e2 f7       	brpl	.-8      	; 0x3ba <DIO_u8SetPinValue+0xca>
 3c2:	84 2b       	or	r24, r20
 3c4:	8c 93       	st	X, r24
 3c6:	13 c0       	rjmp	.+38     	; 0x3ee <DIO_u8SetPinValue+0xfe>
			break;
		case PORT_D :
			SET_BIT(PORTD,u8_CopyPin);
 3c8:	a2 e3       	ldi	r26, 0x32	; 50
 3ca:	b0 e0       	ldi	r27, 0x00	; 0
 3cc:	e2 e3       	ldi	r30, 0x32	; 50
 3ce:	f0 e0       	ldi	r31, 0x00	; 0
 3d0:	80 81       	ld	r24, Z
 3d2:	48 2f       	mov	r20, r24
 3d4:	8a 81       	ldd	r24, Y+2	; 0x02
 3d6:	28 2f       	mov	r18, r24
 3d8:	30 e0       	ldi	r19, 0x00	; 0
 3da:	81 e0       	ldi	r24, 0x01	; 1
 3dc:	90 e0       	ldi	r25, 0x00	; 0
 3de:	02 2e       	mov	r0, r18
 3e0:	02 c0       	rjmp	.+4      	; 0x3e6 <DIO_u8SetPinValue+0xf6>
 3e2:	88 0f       	add	r24, r24
 3e4:	99 1f       	adc	r25, r25
 3e6:	0a 94       	dec	r0
 3e8:	e2 f7       	brpl	.-8      	; 0x3e2 <DIO_u8SetPinValue+0xf2>
 3ea:	84 2b       	or	r24, r20
 3ec:	8c 93       	st	X, r24
			break;
		default :
			break;
		}
	}
	if(u8_Value == LOW )
 3ee:	8b 81       	ldd	r24, Y+3	; 0x03
 3f0:	88 23       	and	r24, r24
 3f2:	09 f0       	breq	.+2      	; 0x3f6 <DIO_u8SetPinValue+0x106>
 3f4:	73 c0       	rjmp	.+230    	; 0x4dc <DIO_u8SetPinValue+0x1ec>
	{
		switch (u8_CopyPort)
 3f6:	89 81       	ldd	r24, Y+1	; 0x01
 3f8:	28 2f       	mov	r18, r24
 3fa:	30 e0       	ldi	r19, 0x00	; 0
 3fc:	3d 83       	std	Y+5, r19	; 0x05
 3fe:	2c 83       	std	Y+4, r18	; 0x04
 400:	8c 81       	ldd	r24, Y+4	; 0x04
 402:	9d 81       	ldd	r25, Y+5	; 0x05
 404:	81 30       	cpi	r24, 0x01	; 1
 406:	91 05       	cpc	r25, r1
 408:	59 f1       	breq	.+86     	; 0x460 <DIO_u8SetPinValue+0x170>
 40a:	2c 81       	ldd	r18, Y+4	; 0x04
 40c:	3d 81       	ldd	r19, Y+5	; 0x05
 40e:	22 30       	cpi	r18, 0x02	; 2
 410:	31 05       	cpc	r19, r1
 412:	2c f4       	brge	.+10     	; 0x41e <DIO_u8SetPinValue+0x12e>
 414:	8c 81       	ldd	r24, Y+4	; 0x04
 416:	9d 81       	ldd	r25, Y+5	; 0x05
 418:	00 97       	sbiw	r24, 0x00	; 0
 41a:	69 f0       	breq	.+26     	; 0x436 <DIO_u8SetPinValue+0x146>
 41c:	5f c0       	rjmp	.+190    	; 0x4dc <DIO_u8SetPinValue+0x1ec>
 41e:	2c 81       	ldd	r18, Y+4	; 0x04
 420:	3d 81       	ldd	r19, Y+5	; 0x05
 422:	22 30       	cpi	r18, 0x02	; 2
 424:	31 05       	cpc	r19, r1
 426:	89 f1       	breq	.+98     	; 0x48a <DIO_u8SetPinValue+0x19a>
 428:	8c 81       	ldd	r24, Y+4	; 0x04
 42a:	9d 81       	ldd	r25, Y+5	; 0x05
 42c:	83 30       	cpi	r24, 0x03	; 3
 42e:	91 05       	cpc	r25, r1
 430:	09 f4       	brne	.+2      	; 0x434 <DIO_u8SetPinValue+0x144>
 432:	40 c0       	rjmp	.+128    	; 0x4b4 <DIO_u8SetPinValue+0x1c4>
 434:	53 c0       	rjmp	.+166    	; 0x4dc <DIO_u8SetPinValue+0x1ec>
		{
		case PORT_A :
			CLR_BIT(PORTA,u8_CopyPin);
 436:	ab e3       	ldi	r26, 0x3B	; 59
 438:	b0 e0       	ldi	r27, 0x00	; 0
 43a:	eb e3       	ldi	r30, 0x3B	; 59
 43c:	f0 e0       	ldi	r31, 0x00	; 0
 43e:	80 81       	ld	r24, Z
 440:	48 2f       	mov	r20, r24
 442:	8a 81       	ldd	r24, Y+2	; 0x02
 444:	28 2f       	mov	r18, r24
 446:	30 e0       	ldi	r19, 0x00	; 0
 448:	81 e0       	ldi	r24, 0x01	; 1
 44a:	90 e0       	ldi	r25, 0x00	; 0
 44c:	02 2e       	mov	r0, r18
 44e:	02 c0       	rjmp	.+4      	; 0x454 <DIO_u8SetPinValue+0x164>
 450:	88 0f       	add	r24, r24
 452:	99 1f       	adc	r25, r25
 454:	0a 94       	dec	r0
 456:	e2 f7       	brpl	.-8      	; 0x450 <DIO_u8SetPinValue+0x160>
 458:	80 95       	com	r24
 45a:	84 23       	and	r24, r20
 45c:	8c 93       	st	X, r24
 45e:	3e c0       	rjmp	.+124    	; 0x4dc <DIO_u8SetPinValue+0x1ec>
			break;
		case PORT_B :
			CLR_BIT(PORTB,u8_CopyPin);
 460:	a8 e3       	ldi	r26, 0x38	; 56
 462:	b0 e0       	ldi	r27, 0x00	; 0
 464:	e8 e3       	ldi	r30, 0x38	; 56
 466:	f0 e0       	ldi	r31, 0x00	; 0
 468:	80 81       	ld	r24, Z
 46a:	48 2f       	mov	r20, r24
 46c:	8a 81       	ldd	r24, Y+2	; 0x02
 46e:	28 2f       	mov	r18, r24
 470:	30 e0       	ldi	r19, 0x00	; 0
 472:	81 e0       	ldi	r24, 0x01	; 1
 474:	90 e0       	ldi	r25, 0x00	; 0
 476:	02 2e       	mov	r0, r18
 478:	02 c0       	rjmp	.+4      	; 0x47e <DIO_u8SetPinValue+0x18e>
 47a:	88 0f       	add	r24, r24
 47c:	99 1f       	adc	r25, r25
 47e:	0a 94       	dec	r0
 480:	e2 f7       	brpl	.-8      	; 0x47a <DIO_u8SetPinValue+0x18a>
 482:	80 95       	com	r24
 484:	84 23       	and	r24, r20
 486:	8c 93       	st	X, r24
 488:	29 c0       	rjmp	.+82     	; 0x4dc <DIO_u8SetPinValue+0x1ec>
			break;
		case PORT_C :
			CLR_BIT(PORTC,u8_CopyPin);
 48a:	a5 e3       	ldi	r26, 0x35	; 53
 48c:	b0 e0       	ldi	r27, 0x00	; 0
 48e:	e5 e3       	ldi	r30, 0x35	; 53
 490:	f0 e0       	ldi	r31, 0x00	; 0
 492:	80 81       	ld	r24, Z
 494:	48 2f       	mov	r20, r24
 496:	8a 81       	ldd	r24, Y+2	; 0x02
 498:	28 2f       	mov	r18, r24
 49a:	30 e0       	ldi	r19, 0x00	; 0
 49c:	81 e0       	ldi	r24, 0x01	; 1
 49e:	90 e0       	ldi	r25, 0x00	; 0
 4a0:	02 2e       	mov	r0, r18
 4a2:	02 c0       	rjmp	.+4      	; 0x4a8 <DIO_u8SetPinValue+0x1b8>
 4a4:	88 0f       	add	r24, r24
 4a6:	99 1f       	adc	r25, r25
 4a8:	0a 94       	dec	r0
 4aa:	e2 f7       	brpl	.-8      	; 0x4a4 <DIO_u8SetPinValue+0x1b4>
 4ac:	80 95       	com	r24
 4ae:	84 23       	and	r24, r20
 4b0:	8c 93       	st	X, r24
 4b2:	14 c0       	rjmp	.+40     	; 0x4dc <DIO_u8SetPinValue+0x1ec>
			break;
		case PORT_D :
			CLR_BIT(PORTD,u8_CopyPin);
 4b4:	a2 e3       	ldi	r26, 0x32	; 50
 4b6:	b0 e0       	ldi	r27, 0x00	; 0
 4b8:	e2 e3       	ldi	r30, 0x32	; 50
 4ba:	f0 e0       	ldi	r31, 0x00	; 0
 4bc:	80 81       	ld	r24, Z
 4be:	48 2f       	mov	r20, r24
 4c0:	8a 81       	ldd	r24, Y+2	; 0x02
 4c2:	28 2f       	mov	r18, r24
 4c4:	30 e0       	ldi	r19, 0x00	; 0
 4c6:	81 e0       	ldi	r24, 0x01	; 1
 4c8:	90 e0       	ldi	r25, 0x00	; 0
 4ca:	02 2e       	mov	r0, r18
 4cc:	02 c0       	rjmp	.+4      	; 0x4d2 <DIO_u8SetPinValue+0x1e2>
 4ce:	88 0f       	add	r24, r24
 4d0:	99 1f       	adc	r25, r25
 4d2:	0a 94       	dec	r0
 4d4:	e2 f7       	brpl	.-8      	; 0x4ce <DIO_u8SetPinValue+0x1de>
 4d6:	80 95       	com	r24
 4d8:	84 23       	and	r24, r20
 4da:	8c 93       	st	X, r24
		default :
			break;
		}
	}

}
 4dc:	28 96       	adiw	r28, 0x08	; 8
 4de:	0f b6       	in	r0, 0x3f	; 63
 4e0:	f8 94       	cli
 4e2:	de bf       	out	0x3e, r29	; 62
 4e4:	0f be       	out	0x3f, r0	; 63
 4e6:	cd bf       	out	0x3d, r28	; 61
 4e8:	cf 91       	pop	r28
 4ea:	df 91       	pop	r29
 4ec:	08 95       	ret

000004ee <DIO_u8SetPortValue>:


u8 DIO_u8SetPortValue(u8 u8_CopyPort,u8 u8_Value)
{
 4ee:	df 93       	push	r29
 4f0:	cf 93       	push	r28
 4f2:	00 d0       	rcall	.+0      	; 0x4f4 <DIO_u8SetPortValue+0x6>
 4f4:	00 d0       	rcall	.+0      	; 0x4f6 <DIO_u8SetPortValue+0x8>
 4f6:	0f 92       	push	r0
 4f8:	cd b7       	in	r28, 0x3d	; 61
 4fa:	de b7       	in	r29, 0x3e	; 62
 4fc:	89 83       	std	Y+1, r24	; 0x01
 4fe:	6a 83       	std	Y+2, r22	; 0x02
	switch (u8_CopyPort)
 500:	89 81       	ldd	r24, Y+1	; 0x01
 502:	28 2f       	mov	r18, r24
 504:	30 e0       	ldi	r19, 0x00	; 0
 506:	3c 83       	std	Y+4, r19	; 0x04
 508:	2b 83       	std	Y+3, r18	; 0x03
 50a:	8b 81       	ldd	r24, Y+3	; 0x03
 50c:	9c 81       	ldd	r25, Y+4	; 0x04
 50e:	81 30       	cpi	r24, 0x01	; 1
 510:	91 05       	cpc	r25, r1
 512:	d1 f0       	breq	.+52     	; 0x548 <DIO_u8SetPortValue+0x5a>
 514:	2b 81       	ldd	r18, Y+3	; 0x03
 516:	3c 81       	ldd	r19, Y+4	; 0x04
 518:	22 30       	cpi	r18, 0x02	; 2
 51a:	31 05       	cpc	r19, r1
 51c:	2c f4       	brge	.+10     	; 0x528 <DIO_u8SetPortValue+0x3a>
 51e:	8b 81       	ldd	r24, Y+3	; 0x03
 520:	9c 81       	ldd	r25, Y+4	; 0x04
 522:	00 97       	sbiw	r24, 0x00	; 0
 524:	61 f0       	breq	.+24     	; 0x53e <DIO_u8SetPortValue+0x50>
 526:	1e c0       	rjmp	.+60     	; 0x564 <DIO_u8SetPortValue+0x76>
 528:	2b 81       	ldd	r18, Y+3	; 0x03
 52a:	3c 81       	ldd	r19, Y+4	; 0x04
 52c:	22 30       	cpi	r18, 0x02	; 2
 52e:	31 05       	cpc	r19, r1
 530:	81 f0       	breq	.+32     	; 0x552 <DIO_u8SetPortValue+0x64>
 532:	8b 81       	ldd	r24, Y+3	; 0x03
 534:	9c 81       	ldd	r25, Y+4	; 0x04
 536:	83 30       	cpi	r24, 0x03	; 3
 538:	91 05       	cpc	r25, r1
 53a:	81 f0       	breq	.+32     	; 0x55c <DIO_u8SetPortValue+0x6e>
 53c:	13 c0       	rjmp	.+38     	; 0x564 <DIO_u8SetPortValue+0x76>
	{
	case PORT_A :
		PORTA=u8_Value;
 53e:	eb e3       	ldi	r30, 0x3B	; 59
 540:	f0 e0       	ldi	r31, 0x00	; 0
 542:	8a 81       	ldd	r24, Y+2	; 0x02
 544:	80 83       	st	Z, r24
 546:	0e c0       	rjmp	.+28     	; 0x564 <DIO_u8SetPortValue+0x76>
		break;
	case PORT_B :
		PORTB=u8_Value;
 548:	e8 e3       	ldi	r30, 0x38	; 56
 54a:	f0 e0       	ldi	r31, 0x00	; 0
 54c:	8a 81       	ldd	r24, Y+2	; 0x02
 54e:	80 83       	st	Z, r24
 550:	09 c0       	rjmp	.+18     	; 0x564 <DIO_u8SetPortValue+0x76>
		break;
	case PORT_C :
		PORTC=u8_Value;
 552:	e5 e3       	ldi	r30, 0x35	; 53
 554:	f0 e0       	ldi	r31, 0x00	; 0
 556:	8a 81       	ldd	r24, Y+2	; 0x02
 558:	80 83       	st	Z, r24
 55a:	04 c0       	rjmp	.+8      	; 0x564 <DIO_u8SetPortValue+0x76>
		break;
	case PORT_D :
		PORTD=u8_Value;
 55c:	e2 e3       	ldi	r30, 0x32	; 50
 55e:	f0 e0       	ldi	r31, 0x00	; 0
 560:	8a 81       	ldd	r24, Y+2	; 0x02
 562:	80 83       	st	Z, r24
		break;
	default:
		break;
	}
}
 564:	0f 90       	pop	r0
 566:	0f 90       	pop	r0
 568:	0f 90       	pop	r0
 56a:	0f 90       	pop	r0
 56c:	0f 90       	pop	r0
 56e:	cf 91       	pop	r28
 570:	df 91       	pop	r29
 572:	08 95       	ret

00000574 <DIO_u8GetPinValue>:


u8 DIO_u8GetPinValue(u8 u8_CopyPort,u8 u8_CopyPin,u8* u8_Value)
{
 574:	df 93       	push	r29
 576:	cf 93       	push	r28
 578:	cd b7       	in	r28, 0x3d	; 61
 57a:	de b7       	in	r29, 0x3e	; 62
 57c:	27 97       	sbiw	r28, 0x07	; 7
 57e:	0f b6       	in	r0, 0x3f	; 63
 580:	f8 94       	cli
 582:	de bf       	out	0x3e, r29	; 62
 584:	0f be       	out	0x3f, r0	; 63
 586:	cd bf       	out	0x3d, r28	; 61
 588:	89 83       	std	Y+1, r24	; 0x01
 58a:	6a 83       	std	Y+2, r22	; 0x02
 58c:	5c 83       	std	Y+4, r21	; 0x04
 58e:	4b 83       	std	Y+3, r20	; 0x03
	switch (u8_CopyPort)
 590:	89 81       	ldd	r24, Y+1	; 0x01
 592:	28 2f       	mov	r18, r24
 594:	30 e0       	ldi	r19, 0x00	; 0
 596:	3e 83       	std	Y+6, r19	; 0x06
 598:	2d 83       	std	Y+5, r18	; 0x05
 59a:	4d 81       	ldd	r20, Y+5	; 0x05
 59c:	5e 81       	ldd	r21, Y+6	; 0x06
 59e:	41 30       	cpi	r20, 0x01	; 1
 5a0:	51 05       	cpc	r21, r1
 5a2:	59 f1       	breq	.+86     	; 0x5fa <DIO_u8GetPinValue+0x86>
 5a4:	8d 81       	ldd	r24, Y+5	; 0x05
 5a6:	9e 81       	ldd	r25, Y+6	; 0x06
 5a8:	82 30       	cpi	r24, 0x02	; 2
 5aa:	91 05       	cpc	r25, r1
 5ac:	34 f4       	brge	.+12     	; 0x5ba <DIO_u8GetPinValue+0x46>
 5ae:	2d 81       	ldd	r18, Y+5	; 0x05
 5b0:	3e 81       	ldd	r19, Y+6	; 0x06
 5b2:	21 15       	cp	r18, r1
 5b4:	31 05       	cpc	r19, r1
 5b6:	69 f0       	breq	.+26     	; 0x5d2 <DIO_u8GetPinValue+0x5e>
 5b8:	5b c0       	rjmp	.+182    	; 0x670 <DIO_u8GetPinValue+0xfc>
 5ba:	4d 81       	ldd	r20, Y+5	; 0x05
 5bc:	5e 81       	ldd	r21, Y+6	; 0x06
 5be:	42 30       	cpi	r20, 0x02	; 2
 5c0:	51 05       	cpc	r21, r1
 5c2:	79 f1       	breq	.+94     	; 0x622 <DIO_u8GetPinValue+0xae>
 5c4:	8d 81       	ldd	r24, Y+5	; 0x05
 5c6:	9e 81       	ldd	r25, Y+6	; 0x06
 5c8:	83 30       	cpi	r24, 0x03	; 3
 5ca:	91 05       	cpc	r25, r1
 5cc:	09 f4       	brne	.+2      	; 0x5d0 <DIO_u8GetPinValue+0x5c>
 5ce:	3d c0       	rjmp	.+122    	; 0x64a <DIO_u8GetPinValue+0xd6>
 5d0:	4f c0       	rjmp	.+158    	; 0x670 <DIO_u8GetPinValue+0xfc>
	{
	case PORT_A :
		*u8_Value=GET_BIT(PINA,u8_CopyPin);
 5d2:	e9 e3       	ldi	r30, 0x39	; 57
 5d4:	f0 e0       	ldi	r31, 0x00	; 0
 5d6:	80 81       	ld	r24, Z
 5d8:	28 2f       	mov	r18, r24
 5da:	30 e0       	ldi	r19, 0x00	; 0
 5dc:	8a 81       	ldd	r24, Y+2	; 0x02
 5de:	88 2f       	mov	r24, r24
 5e0:	90 e0       	ldi	r25, 0x00	; 0
 5e2:	a9 01       	movw	r20, r18
 5e4:	02 c0       	rjmp	.+4      	; 0x5ea <DIO_u8GetPinValue+0x76>
 5e6:	55 95       	asr	r21
 5e8:	47 95       	ror	r20
 5ea:	8a 95       	dec	r24
 5ec:	e2 f7       	brpl	.-8      	; 0x5e6 <DIO_u8GetPinValue+0x72>
 5ee:	ca 01       	movw	r24, r20
 5f0:	81 70       	andi	r24, 0x01	; 1
 5f2:	eb 81       	ldd	r30, Y+3	; 0x03
 5f4:	fc 81       	ldd	r31, Y+4	; 0x04
 5f6:	80 83       	st	Z, r24
 5f8:	3b c0       	rjmp	.+118    	; 0x670 <DIO_u8GetPinValue+0xfc>
		break;
	case PORT_B :
		*u8_Value=GET_BIT(PINB,u8_CopyPin);
 5fa:	e6 e3       	ldi	r30, 0x36	; 54
 5fc:	f0 e0       	ldi	r31, 0x00	; 0
 5fe:	80 81       	ld	r24, Z
 600:	28 2f       	mov	r18, r24
 602:	30 e0       	ldi	r19, 0x00	; 0
 604:	8a 81       	ldd	r24, Y+2	; 0x02
 606:	88 2f       	mov	r24, r24
 608:	90 e0       	ldi	r25, 0x00	; 0
 60a:	a9 01       	movw	r20, r18
 60c:	02 c0       	rjmp	.+4      	; 0x612 <DIO_u8GetPinValue+0x9e>
 60e:	55 95       	asr	r21
 610:	47 95       	ror	r20
 612:	8a 95       	dec	r24
 614:	e2 f7       	brpl	.-8      	; 0x60e <DIO_u8GetPinValue+0x9a>
 616:	ca 01       	movw	r24, r20
 618:	81 70       	andi	r24, 0x01	; 1
 61a:	eb 81       	ldd	r30, Y+3	; 0x03
 61c:	fc 81       	ldd	r31, Y+4	; 0x04
 61e:	80 83       	st	Z, r24
 620:	27 c0       	rjmp	.+78     	; 0x670 <DIO_u8GetPinValue+0xfc>
		break;
	case PORT_C :
		*u8_Value=GET_BIT(PINC,u8_CopyPin);
 622:	e3 e3       	ldi	r30, 0x33	; 51
 624:	f0 e0       	ldi	r31, 0x00	; 0
 626:	80 81       	ld	r24, Z
 628:	28 2f       	mov	r18, r24
 62a:	30 e0       	ldi	r19, 0x00	; 0
 62c:	8a 81       	ldd	r24, Y+2	; 0x02
 62e:	88 2f       	mov	r24, r24
 630:	90 e0       	ldi	r25, 0x00	; 0
 632:	a9 01       	movw	r20, r18
 634:	02 c0       	rjmp	.+4      	; 0x63a <DIO_u8GetPinValue+0xc6>
 636:	55 95       	asr	r21
 638:	47 95       	ror	r20
 63a:	8a 95       	dec	r24
 63c:	e2 f7       	brpl	.-8      	; 0x636 <DIO_u8GetPinValue+0xc2>
 63e:	ca 01       	movw	r24, r20
 640:	81 70       	andi	r24, 0x01	; 1
 642:	eb 81       	ldd	r30, Y+3	; 0x03
 644:	fc 81       	ldd	r31, Y+4	; 0x04
 646:	80 83       	st	Z, r24
 648:	13 c0       	rjmp	.+38     	; 0x670 <DIO_u8GetPinValue+0xfc>
		break;
	case PORT_D :
		*u8_Value=GET_BIT(PIND,u8_CopyPin);
 64a:	e0 e3       	ldi	r30, 0x30	; 48
 64c:	f0 e0       	ldi	r31, 0x00	; 0
 64e:	80 81       	ld	r24, Z
 650:	28 2f       	mov	r18, r24
 652:	30 e0       	ldi	r19, 0x00	; 0
 654:	8a 81       	ldd	r24, Y+2	; 0x02
 656:	88 2f       	mov	r24, r24
 658:	90 e0       	ldi	r25, 0x00	; 0
 65a:	a9 01       	movw	r20, r18
 65c:	02 c0       	rjmp	.+4      	; 0x662 <DIO_u8GetPinValue+0xee>
 65e:	55 95       	asr	r21
 660:	47 95       	ror	r20
 662:	8a 95       	dec	r24
 664:	e2 f7       	brpl	.-8      	; 0x65e <DIO_u8GetPinValue+0xea>
 666:	ca 01       	movw	r24, r20
 668:	81 70       	andi	r24, 0x01	; 1
 66a:	eb 81       	ldd	r30, Y+3	; 0x03
 66c:	fc 81       	ldd	r31, Y+4	; 0x04
 66e:	80 83       	st	Z, r24
		break;
	}
}
 670:	27 96       	adiw	r28, 0x07	; 7
 672:	0f b6       	in	r0, 0x3f	; 63
 674:	f8 94       	cli
 676:	de bf       	out	0x3e, r29	; 62
 678:	0f be       	out	0x3f, r0	; 63
 67a:	cd bf       	out	0x3d, r28	; 61
 67c:	cf 91       	pop	r28
 67e:	df 91       	pop	r29
 680:	08 95       	ret

00000682 <DIO_u8GetPortValue>:


u8 DIO_u8GetPortValue(u8 u8_CopyPort,u8* u8_Value)
{
 682:	df 93       	push	r29
 684:	cf 93       	push	r28
 686:	00 d0       	rcall	.+0      	; 0x688 <DIO_u8GetPortValue+0x6>
 688:	00 d0       	rcall	.+0      	; 0x68a <DIO_u8GetPortValue+0x8>
 68a:	00 d0       	rcall	.+0      	; 0x68c <DIO_u8GetPortValue+0xa>
 68c:	cd b7       	in	r28, 0x3d	; 61
 68e:	de b7       	in	r29, 0x3e	; 62
 690:	89 83       	std	Y+1, r24	; 0x01
 692:	7b 83       	std	Y+3, r23	; 0x03
 694:	6a 83       	std	Y+2, r22	; 0x02
	switch(u8_CopyPort)
 696:	89 81       	ldd	r24, Y+1	; 0x01
 698:	28 2f       	mov	r18, r24
 69a:	30 e0       	ldi	r19, 0x00	; 0
 69c:	3d 83       	std	Y+5, r19	; 0x05
 69e:	2c 83       	std	Y+4, r18	; 0x04
 6a0:	8c 81       	ldd	r24, Y+4	; 0x04
 6a2:	9d 81       	ldd	r25, Y+5	; 0x05
 6a4:	81 30       	cpi	r24, 0x01	; 1
 6a6:	91 05       	cpc	r25, r1
 6a8:	e1 f0       	breq	.+56     	; 0x6e2 <DIO_u8GetPortValue+0x60>
 6aa:	2c 81       	ldd	r18, Y+4	; 0x04
 6ac:	3d 81       	ldd	r19, Y+5	; 0x05
 6ae:	22 30       	cpi	r18, 0x02	; 2
 6b0:	31 05       	cpc	r19, r1
 6b2:	2c f4       	brge	.+10     	; 0x6be <DIO_u8GetPortValue+0x3c>
 6b4:	8c 81       	ldd	r24, Y+4	; 0x04
 6b6:	9d 81       	ldd	r25, Y+5	; 0x05
 6b8:	00 97       	sbiw	r24, 0x00	; 0
 6ba:	61 f0       	breq	.+24     	; 0x6d4 <DIO_u8GetPortValue+0x52>
 6bc:	26 c0       	rjmp	.+76     	; 0x70a <DIO_u8GetPortValue+0x88>
 6be:	2c 81       	ldd	r18, Y+4	; 0x04
 6c0:	3d 81       	ldd	r19, Y+5	; 0x05
 6c2:	22 30       	cpi	r18, 0x02	; 2
 6c4:	31 05       	cpc	r19, r1
 6c6:	a1 f0       	breq	.+40     	; 0x6f0 <DIO_u8GetPortValue+0x6e>
 6c8:	8c 81       	ldd	r24, Y+4	; 0x04
 6ca:	9d 81       	ldd	r25, Y+5	; 0x05
 6cc:	83 30       	cpi	r24, 0x03	; 3
 6ce:	91 05       	cpc	r25, r1
 6d0:	b1 f0       	breq	.+44     	; 0x6fe <DIO_u8GetPortValue+0x7c>
 6d2:	1b c0       	rjmp	.+54     	; 0x70a <DIO_u8GetPortValue+0x88>
	{
	case PORT_A :
		*u8_Value=PINA ;
 6d4:	e9 e3       	ldi	r30, 0x39	; 57
 6d6:	f0 e0       	ldi	r31, 0x00	; 0
 6d8:	80 81       	ld	r24, Z
 6da:	ea 81       	ldd	r30, Y+2	; 0x02
 6dc:	fb 81       	ldd	r31, Y+3	; 0x03
 6de:	80 83       	st	Z, r24
 6e0:	14 c0       	rjmp	.+40     	; 0x70a <DIO_u8GetPortValue+0x88>
		break;
	case PORT_B :
		*u8_Value=PINB ;
 6e2:	e6 e3       	ldi	r30, 0x36	; 54
 6e4:	f0 e0       	ldi	r31, 0x00	; 0
 6e6:	80 81       	ld	r24, Z
 6e8:	ea 81       	ldd	r30, Y+2	; 0x02
 6ea:	fb 81       	ldd	r31, Y+3	; 0x03
 6ec:	80 83       	st	Z, r24
 6ee:	0d c0       	rjmp	.+26     	; 0x70a <DIO_u8GetPortValue+0x88>
		break;
	case PORT_C :
		*u8_Value=PINC ;
 6f0:	e3 e3       	ldi	r30, 0x33	; 51
 6f2:	f0 e0       	ldi	r31, 0x00	; 0
 6f4:	80 81       	ld	r24, Z
 6f6:	ea 81       	ldd	r30, Y+2	; 0x02
 6f8:	fb 81       	ldd	r31, Y+3	; 0x03
 6fa:	80 83       	st	Z, r24
 6fc:	06 c0       	rjmp	.+12     	; 0x70a <DIO_u8GetPortValue+0x88>
		break;
	case PORT_D :
		*u8_Value=PIND ;
 6fe:	e0 e3       	ldi	r30, 0x30	; 48
 700:	f0 e0       	ldi	r31, 0x00	; 0
 702:	80 81       	ld	r24, Z
 704:	ea 81       	ldd	r30, Y+2	; 0x02
 706:	fb 81       	ldd	r31, Y+3	; 0x03
 708:	80 83       	st	Z, r24
		break;
	default:
		break;
	}
}
 70a:	26 96       	adiw	r28, 0x06	; 6
 70c:	0f b6       	in	r0, 0x3f	; 63
 70e:	f8 94       	cli
 710:	de bf       	out	0x3e, r29	; 62
 712:	0f be       	out	0x3f, r0	; 63
 714:	cd bf       	out	0x3d, r28	; 61
 716:	cf 91       	pop	r28
 718:	df 91       	pop	r29
 71a:	08 95       	ret

0000071c <main>:
#include "COTS2/1-MCAL/1-DIO/DIO_interface.h"

void main(void)
{
 71c:	df 93       	push	r29
 71e:	cf 93       	push	r28
 720:	cd b7       	in	r28, 0x3d	; 61
 722:	de b7       	in	r29, 0x3e	; 62
	DIO_u8SetPortDirection(PORT_C,0xff);
 724:	82 e0       	ldi	r24, 0x02	; 2
 726:	6f ef       	ldi	r22, 0xFF	; 255
 728:	0e 94 35 01 	call	0x26a	; 0x26a <DIO_u8SetPortDirection>

	while(1)
	{
	DIO_u8SetPortValue(PORT_C,0xff);
 72c:	82 e0       	ldi	r24, 0x02	; 2
 72e:	6f ef       	ldi	r22, 0xFF	; 255
 730:	0e 94 77 02 	call	0x4ee	; 0x4ee <DIO_u8SetPortValue>
 734:	fb cf       	rjmp	.-10     	; 0x72c <main+0x10>

00000736 <_exit>:
 736:	f8 94       	cli

00000738 <__stop_program>:
 738:	ff cf       	rjmp	.-2      	; 0x738 <__stop_program>
